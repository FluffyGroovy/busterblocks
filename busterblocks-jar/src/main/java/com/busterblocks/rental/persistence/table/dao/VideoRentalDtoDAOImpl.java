package com.busterblocks.rental.persistence.table.dao;

import com.busterblocks.rental.persistence.table.dto.VideoRentalDto;
import com.busterblocks.rental.persistence.table.dto.VideoRentalDtoExample;
import java.math.BigDecimal;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class VideoRentalDtoDAOImpl extends SqlMapClientDaoSupport implements VideoRentalDtoDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public VideoRentalDtoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int countByExample(VideoRentalDtoExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("HR_VIDEO_RENTAL.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int deleteByExample(VideoRentalDtoExample example) {
        int rows = getSqlMapClientTemplate().delete("HR_VIDEO_RENTAL.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int deleteByPrimaryKey(BigDecimal VIDEO_RENTAL_ID) {
        VideoRentalDto key = new VideoRentalDto();
        key.setVIDEO_RENTAL_ID(VIDEO_RENTAL_ID);
        int rows = getSqlMapClientTemplate().delete("HR_VIDEO_RENTAL.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public void insert(VideoRentalDto record) {
        getSqlMapClientTemplate().insert("HR_VIDEO_RENTAL.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public void insertSelective(VideoRentalDto record) {
        getSqlMapClientTemplate().insert("HR_VIDEO_RENTAL.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    @SuppressWarnings("unchecked")
    public List<VideoRentalDto> selectByExample(VideoRentalDtoExample example) {
        List<VideoRentalDto> list = getSqlMapClientTemplate().queryForList("HR_VIDEO_RENTAL.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public VideoRentalDto selectByPrimaryKey(BigDecimal VIDEO_RENTAL_ID) {
        VideoRentalDto key = new VideoRentalDto();
        key.setVIDEO_RENTAL_ID(VIDEO_RENTAL_ID);
        VideoRentalDto record = (VideoRentalDto) getSqlMapClientTemplate().queryForObject("HR_VIDEO_RENTAL.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int updateByExampleSelective(VideoRentalDto record, VideoRentalDtoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("HR_VIDEO_RENTAL.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int updateByExample(VideoRentalDto record, VideoRentalDtoExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("HR_VIDEO_RENTAL.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int updateByPrimaryKeySelective(VideoRentalDto record) {
        int rows = getSqlMapClientTemplate().update("HR_VIDEO_RENTAL.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    public int updateByPrimaryKey(VideoRentalDto record) {
        int rows = getSqlMapClientTemplate().update("HR_VIDEO_RENTAL.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table HR.VIDEO_RENTAL
     *
     * @ibatorgenerated Mon Jun 15 13:29:27 CAT 2015
     */
    private static class UpdateByExampleParms extends VideoRentalDtoExample {
        private Object record;

        public UpdateByExampleParms(Object record, VideoRentalDtoExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}